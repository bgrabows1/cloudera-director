{
  "name": "{{ cloudera_director_cluster_name }}",
  "productVersions": {
    "CDH": "6"
  },
  "services": [
    "HDFS",
    "HIVE",
    "HUE",
    "OOZIE",
    "YARN",
    "ZOOKEEPER",
    "SPARK_ON_YARN"
  ],
  "servicesConfigs": {
    "HDFS": {
      "dfs_ha_fencing_methods":               "shell(true)",
      "dfs_encrypt_data_transfer_algorithm":  "AES/CTR/NoPadding",
      "hadoop_security_authentication":       "kerberos",
      "hadoop_security_authorization":        "true"
    },
    "OOZIE": {
      "oozie_load_balancer":            "{{ cloudera_director_private_ip }}",
      "oozie_load_balancer_http_port":  11000
    },
    "HUE": {
      "hue_service_safety_valve": "[desktop]\nallowed_hosts=hue.{{ env_name }}.{{ env_domain }}\nuse_x_forwarded_host=true\nbehind_reverse_proxy=true\nhue_load_balancer=https://hue.{{ env_name }}.{{ env_domain }}"
    },
    "ZOOKEEPER": {
      "enableSecurity": "true"
    },
    "CDSW": {
        "cdsw.domain.config": "cdsw.{{ env_name }}.{{ env_domain }}" # The fully qualified domain name for the CDSW host
    }
  },
  "virtualInstanceGroups": {
    "hdfsmasters-core": {
      "name": "{{ aws_properties.cluster_types[cluster_type].cluster.hdfsmasternode_core.cloudera_cluster_template_name }}",
      "virtualInstances":
       [
        {% for x in range(aws_properties.cluster_types[cluster_type].cluster.hdfsmasternode_core.cloudera_cluster_nodes_number) %}
          {
            "id": "{{ ((x + 10) | pow(3)) | to_uuid }}",
            "template": {
              "name":             "{{ aws_properties.cluster_types[cluster_type].cluster.hdfsmasternode_core.cloudera_cluster_template_name }}",
              "type":             "{{ aws_properties.cluster_types[cluster_type].cluster.hdfsmasternode_core.cloudera_cluster_ec2_type }}",
              "image":            "{{ aws_properties.cluster_types[cluster_type].cluster.hdfsmasternode_core.cloudera_cluster_ami_name }}",
              "rackId":           "/default",
              "bootstrapScripts": [],
              "config": {
                "ebsVolumeCount":       "0",
                "subnetId":             "{{ aws_properties.global.cloudera_director_subnet_id }}",
                "ebsOptimized":         "false",
                "enableEbsEncryption":  "false",
                "rootVolumeType":       "gp2",
                "instanceNamePrefix":   "{{ aws_properties.cluster_types[cluster_type].cluster.hdfsmasternode_core.cloudera_cluster_template_name }}",
                "ebsVolumeSizeGiB":     "500",
                "rootVolumeSizeGB":     "50",
                "useSpotInstances":     "false",
                "ebsVolumeType":        "st1",
                "securityGroupsIds":    "{{ aws_properties.global.cloudera_director_sg_id }}"
              },
              "tags": {},
              "normalizeInstance":        true,
              "sshHostKeyRetrievalType":  "NONE"
            }
          }
          {% if not loop.last %},{% endif %}
        {% endfor %}
        ],
      "minCount": {{ aws_properties.cluster_types[cluster_type].cluster.hdfsmasternode_core.cloudera_cluster_nodes_number }},
      "serviceTypeToRoleTypes": {
        "HDFS": [
          "NAMENODE",
          "FAILOVERCONTROLLER",
          "JOURNALNODE"
        ]
      },
      "roleTypesConfigs": {
        "HDFS": {
          "NAMENODE": {
            "dfs_federation_namenode_nameservice":  "hanameservice",
            "autofailover_enabled":                 true,
            "dfs_namenode_quorum_journal_name":     "hanameservice"
          }
        }
      }
    },
    "hdfsmasters-httpfs": {
      "name": "{{ aws_properties.cluster_types[cluster_type].cluster.hdfsmasternode_httpfs.cloudera_cluster_template_name }}",
      "virtualInstances":
       [
        {% for x in range(aws_properties.cluster_types[cluster_type].cluster.hdfsmasternode_httpfs.cloudera_cluster_nodes_number) %}
          {
            "id": "{{ ((x + 20) | pow(3)) | to_uuid }}",
            "template": {
              "name":             "{{ aws_properties.cluster_types[cluster_type].cluster.hdfsmasternode_httpfs.cloudera_cluster_template_name }}",
              "type":             "{{ aws_properties.cluster_types[cluster_type].cluster.hdfsmasternode_httpfs.cloudera_cluster_ec2_type }}",
              "image":            "{{ aws_properties.cluster_types[cluster_type].cluster.hdfsmasternode_httpfs.cloudera_cluster_ami_name }}",
              "rackId":           "/default",
              "bootstrapScripts": [],
              "config": {
                "ebsVolumeCount":       "0",
                "subnetId":             "{{ aws_properties.global.cloudera_director_subnet_id }}",
                "ebsOptimized":         "false",
                "enableEbsEncryption":  "false",
                "rootVolumeType":       "gp2",
                "instanceNamePrefix":   "{{ aws_properties.cluster_types[cluster_type].cluster.hdfsmasternode_httpfs.cloudera_cluster_template_name }}",
                "ebsVolumeSizeGiB":     "500",
                "rootVolumeSizeGB":     "50",
                "useSpotInstances":     "false",
                "ebsVolumeType":        "st1",
                "securityGroupsIds":    "{{ aws_properties.global.cloudera_director_sg_id }}"
              },
              "tags":                     {},
              "normalizeInstance":        true,
              "sshHostKeyRetrievalType":  "NONE"
            }
          }
          {% if not loop.last %},{% endif %}
        {% endfor %}
        ],
      "minCount": {{ aws_properties.cluster_types[cluster_type].cluster.hdfsmasternode_httpfs.cloudera_cluster_nodes_number }},
      "serviceTypeToRoleTypes": {
        "HDFS": [
          "HTTPFS",
          "JOURNALNODE"
        ]
      },
      "roleTypesConfigs": {}
    },
    "masters-2": {
      "name": "{{ aws_properties.cluster_types[cluster_type].cluster.masternode_2.cloudera_cluster_template_name }}",
      "virtualInstances":
       [
        {% for x in range(aws_properties.cluster_types[cluster_type].cluster.masternode_2.cloudera_cluster_nodes_number) %}
          {
            "id": "{{ ((x + 30) | pow(3)) | to_uuid }}",
            "template": {
              "name":             "{{ aws_properties.cluster_types[cluster_type].cluster.masternode_2.cloudera_cluster_template_name }}",
              "type":             "{{ aws_properties.cluster_types[cluster_type].cluster.masternode_2.cloudera_cluster_ec2_type }}",
              "image":            "{{ aws_properties.cluster_types[cluster_type].cluster.masternode_2.cloudera_cluster_ami_name }}",
              "rackId":           "/default",
              "bootstrapScripts": [],
              "config": {
                "ebsVolumeCount":       "0",
                "subnetId":             "{{ aws_properties.global.cloudera_director_subnet_id }}",
                "ebsOptimized":         "false",
                "enableEbsEncryption":  "false",
                "rootVolumeType":       "gp2",
                "instanceNamePrefix":   "{{ aws_properties.cluster_types[cluster_type].cluster.masternode_2.cloudera_cluster_template_name }}",
                "ebsVolumeSizeGiB":     "500",
                "rootVolumeSizeGB":     "50",
                "useSpotInstances":     "false",
                "ebsVolumeType":        "st1",
                "securityGroupsIds":    "{{ aws_properties.global.cloudera_director_sg_id }}"
              },
              "tags":                     {},
              "normalizeInstance":        true,
              "sshHostKeyRetrievalType":  "NONE"
            }
          }
          {% if not loop.last %},{% endif %}
        {% endfor %}
        ],
      "minCount": {{ aws_properties.cluster_types[cluster_type].cluster.masternode_2.cloudera_cluster_nodes_number }},
      "serviceTypeToRoleTypes": {
        "HIVE": [
          "HIVEMETASTORE",
          "HIVESERVER2"
        ],
        "OOZIE": [
          "OOZIE_SERVER"
        ],
        "HUE": [
          "HUE_SERVER"
        ],
        "ZOOKEEPER": [
          "SERVER"
        ],
        "YARN": [
          "RESOURCEMANAGER"
        ],
        "SPARK_ON_YARN": [
          "GATEWAY"
        ]
      },
      "roleTypesConfigs": {
        "OOZIE": {
          "OOZIE_SERVER": {
            "oozie_plugins_list": "org.apache.oozie.service.ZKLocksService,org.apache.oozie.service.ZKXLogStreamingService,org.apache.oozie.service.ZKJobsConcurrencyService,org.apache.oozie.service.ZKUUIDService"
          }
        },
        "HIVE": {
          "HIVESERVER2": {
            "hiverserver2_load_balancer": "{{ cloudera_director_private_ip }}:10000"
          }
        }
      }
    },
    "masters": {
      "name": "{{ aws_properties.cluster_types[cluster_type].cluster.masternode.cloudera_cluster_template_name }}",
      "virtualInstances":
       [
        {% for x in range(aws_properties.cluster_types[cluster_type].cluster.masternode.cloudera_cluster_nodes_number) %}
          {
            "id": "{{ ((x + 40) | pow(3)) | to_uuid }}",
            "template": {
              "name":             "{{ aws_properties.cluster_types[cluster_type].cluster.masternode.cloudera_cluster_template_name }}",
              "type":             "{{ aws_properties.cluster_types[cluster_type].cluster.masternode.cloudera_cluster_ec2_type }}",
              "image":            "{{ aws_properties.cluster_types[cluster_type].cluster.masternode.cloudera_cluster_ami_name }}",
              "rackId":           "/default",
              "bootstrapScripts": [],
              "config": {
                "ebsVolumeCount":       "0",
                "subnetId":             "{{ aws_properties.global.cloudera_director_subnet_id }}",
                "ebsOptimized":         "false",
                "enableEbsEncryption":  "false",
                "rootVolumeType":       "gp2",
                "instanceNamePrefix":   "{{ aws_properties.cluster_types[cluster_type].cluster.masternode.cloudera_cluster_template_name }}",
                "ebsVolumeSizeGiB":     "500",
                "rootVolumeSizeGB":     "50",
                "useSpotInstances":     "false",
                "ebsVolumeType":        "st1",
                "securityGroupsIds":    "{{ aws_properties.global.cloudera_director_sg_id }}"
              },
              "tags":                     {},
              "normalizeInstance":        true,
              "sshHostKeyRetrievalType":  "NONE"
            }
          }
          {% if not loop.last %},{% endif %}
        {% endfor %}
        ],
      "minCount": {{ aws_properties.cluster_types[cluster_type].cluster.masternode.cloudera_cluster_nodes_number }},
      "serviceTypeToRoleTypes": {
        "HUE": [
          "HUE_LOAD_BALANCER"
        ],
        "ZOOKEEPER": [
          "SERVER"
        ],
        "YARN": [
          "JOBHISTORY"
        ],
        "SPARK_ON_YARN": [
          "SPARK_YARN_HISTORY_SERVER"
        ]
      },
      "roleTypesConfigs": {}
    },
    "workers": {
      "name": "{{ aws_properties.cluster_types[cluster_type].cluster.datanode.cloudera_cluster_template_name }}",
      "virtualInstances":
      [
        {% for x in range(aws_properties.cluster_types[cluster_type].cluster.datanode.cloudera_cluster_nodes_number) %}
          {
            "id": "{{ ((x + 50) | pow(3)) | to_uuid }}",
            "template": {
              "name":             "{{ aws_properties.cluster_types[cluster_type].cluster.datanode.cloudera_cluster_template_name }}",
              "type":             "{{ aws_properties.cluster_types[cluster_type].cluster.datanode.cloudera_cluster_ec2_type }}",
              "image":            "{{ aws_properties.cluster_types[cluster_type].cluster.datanode.cloudera_cluster_ami_name }}",
              "rackId":           "/default",
              "bootstrapScripts": [],
              "config": {
                "ebsVolumeCount":       "1",
                "subnetId":             "{{ aws_properties.global.cloudera_director_subnet_id }}",
                "ebsOptimized":         "false",
                "enableEbsEncryption":  "false",
                "rootVolumeType":       "gp2",
                "instanceNamePrefix":   "{{ aws_properties.cluster_types[cluster_type].cluster.datanode.cloudera_cluster_template_name }}",
                "ebsVolumeSizeGiB":     "500",
                "rootVolumeSizeGB":     "50",
                "useSpotInstances":     "false",
                "ebsVolumeType":        "st1",
                "securityGroupsIds":    "{{ aws_properties.global.cloudera_director_sg_id }}"
              },
              "tags":                     {},
              "normalizeInstance":        true,
              "sshHostKeyRetrievalType":  "NONE"
            }
          }
          {% if not loop.last %},{% endif %}
        {% endfor %}
        ],
      "minCount": {{ aws_properties.cluster_types[cluster_type].cluster.datanode.cloudera_cluster_nodes_number }},
      "serviceTypeToRoleTypes": {
        "HDFS": [
          "DATANODE"
        ],
        "YARN": [
          "NODEMANAGER"
        ],
        "SPARK_ON_YARN": [
          "GATEWAY"
        ]
      },
      "roleTypesConfigs": {
        "HDFS": {
          "DATANODE": {
            "dfs_datanode_data_dir_perm": "700",
            "dfs_datanode_http_port":     "1006",
            "dfs_datanode_port":          "1004"
          }
        }
      }
    },
    "cdswmasters": {
      "name": "{{ aws_properties.cluster_types[cluster_type].cluster.cdswmasternode.cloudera_cluster_template_name }}",
      "virtualInstances": [
        {% for x in range(aws_properties.cluster_types[cluster_type].cluster.cdswmasternode.cloudera_cluster_nodes_number) %}
          {
            "id": "{{ ((x + 300) | pow(3)) | to_uuid }}",
            "template": {
              "name":             "{{ aws_properties.cluster_types[cluster_type].cluster.cdswmasternode.cloudera_cluster_template_name }}",
              "type":             "{{ aws_properties.cluster_types[cluster_type].cluster.cdswmasternode.cloudera_cluster_ec2_type }}",
              "image":            "{{ aws_properties.cluster_types[cluster_type].cluster.cdswmasternode.cloudera_cluster_ami_name }}",
              "rackId":           "/default",
              "bootstrapScripts": [
                """#!/bin/sh

                echo "net.bridge.bridge-nf-call-iptables=1" > /etc/sysctl.d/k8s.conf
                echo "net.bridge.bridge-nf-call-ip6tables=1" >> /etc/sysctl.d/k8s.conf
                echo "net.ipv4.ip_forward=1" >> /etc/sysctl.d/k8s.conf
                echo "net.ipv4.conf.default.forwarding=1" >> /etc/sysctl.d/k8s.conf

                sysctl -p

                # We remove any natively installed JDKs, as both Cloudera Manager and Cloudera Altus Director only support Oracle JDKs
                yum remove --assumeyes *openjdk*

                # Install JDK 1.8 required by Spark 2
                rpm -ivh "https://archive.cloudera.com/director6/6.2.0/redhat7/RPMS/x86_64/oracle-j2sdk1.8-1.8.0+update141-1.x86_64.rpm"

                device="/dev/xvdh"
                mount="/var/lib/cdsw"

                mkfs.ext4 -F -E lazy_itable_init=1 "$device" -m 0


                if [ ! -e "$mount" ]; then
                  mkdir -p "$mount"
                fi

                mount -o defaults,noatime "$device" "$mount"

                echo "$device $mount ext4 defaults,noatime 0 0" >> /etc/fstab

                exit 0
                """
              ],
              "config": {
                "ebsVolumeCount":       "3",
                "subnetId":             "{{ aws_properties.global.cloudera_director_subnet_id }}",
                "ebsOptimized":         "false",
                "enableEbsEncryption":  "false",
                "rootVolumeType":       "gp2",
                "instanceNamePrefix":   "{{ aws_properties.cluster_types[cluster_type].cluster.cdswmasternode.cloudera_cluster_template_name }}",
                "ebsVolumeSizeGiB":     "1000",
                "rootVolumeSizeGB":     "100",
                "useSpotInstances":     "false",
                "ebsVolumeType":        "gp2",
                "securityGroupsIds":    "{{ aws_properties.global.cloudera_director_sg_id }}"
              },
              "tags":                     {},
              "normalizeInstance":        true,
              "sshHostKeyRetrievalType":  "NONE"
            }
          }
          {% if not loop.last %},{% endif %}
        {% endfor %}
        ],
      "minCount": {{ aws_properties.cluster_types[cluster_type].cluster.cdswmasternode.cloudera_cluster_nodes_number }},
      "count":    {{ aws_properties.cluster_types[cluster_type].cluster.cdswmasternode.cloudera_cluster_nodes_number }},
      "serviceTypeToRoleTypes": {
        "HDFS": [
          "GATEWAY"
        ],
        "YARN": [
          "GATEWAY"
        ],
        "SPARK_ON_YARN": [
          "GATEWAY"
        ],
        "CDSW": [
          "CDSW_MASTER",
          "CDSW_APPLICATION",
          "CDSW_DOCKER"
        ]
      },
      "roleTypesConfigs": {
        "CDSW": {
          "CDSW_DOCKER": {
            "cdsw.docker.devices.config": "/dev/xvdf /dev/xvdg" # related to the ebs configuration above
            }
          }
        }
      },
      "cdswworkers": {
        "name": "{{ aws_properties.cluster_types[cluster_type].cluster.cdswworker.cloudera_cluster_template_name }}",
        "virtualInstances": [
          {% for x in range(aws_properties.cluster_types[cluster_type].cluster.cdswworker.cloudera_cluster_nodes_number) %}
            {
              "id": "{{ ((x + 400) | pow(3)) | to_uuid }}",
              "template": {
                "name":             "{{ aws_properties.cluster_types[cluster_type].cluster.cdswworker.cloudera_cluster_template_name }}",
                "type":             "{{ aws_properties.cluster_types[cluster_type].cluster.cdswworker.cloudera_cluster_ec2_type }}",
                "image":            "{{ aws_properties.cluster_types[cluster_type].cluster.cdswworker.cloudera_cluster_ami_name }}",
                "rackId":           "/default",
                "bootstrapScripts": [],
                "config": {
                  "ebsVolumeCount":       "2",
                  "subnetId":             "{{ aws_properties.global.cloudera_director_subnet_id }}",
                  "ebsOptimized":         "false",
                  "enableEbsEncryption":  "false",
                  "rootVolumeType":       "gp2",
                  "instanceNamePrefix":   "{{ aws_properties.cluster_types[cluster_type].cluster.cdswworker.cloudera_cluster_template_name }}",
                  "ebsVolumeSizeGiB":     "500",
                  "rootVolumeSizeGB":     "100",
                  "useSpotInstances":     "false",
                  "ebsVolumeType":        "gp2",
                  "securityGroupsIds":    "{{ aws_properties.global.cloudera_director_sg_id }}"
                },
                "tags":                     {},
                "normalizeInstance":        true,
                "sshHostKeyRetrievalType":  "NONE"
              }
            }
            {% if not loop.last %},{% endif %}
          {% endfor %}
          ],
        "minCount": {{ aws_properties.cluster_types[cluster_type].cluster.cdswworker.cloudera_cluster_nodes_number }},
        "count": {{ aws_properties.cluster_types[cluster_type].cluster.cdswworker.cloudera_cluster_nodes_number }},
        "serviceTypeToRoleTypes": {
          "HDFS": [
            "GATEWAY"
          ],
          "YARN": [
            "GATEWAY"
          ],
          "CDSW": [
            "CDSW_WORKER",
            "CDSW_DOCKER"
          ],
          "SPARK_ON_YARN": [
            "GATEWAY"
          ]
        },
        "roleTypesConfigs": {
            "CDSW": {
              "CDSW_DOCKER": {
                "cdsw.docker.devices.config": "/dev/xvdf /dev/xvdg" # related to the ebs configuration above
                }
              }
            }
          }
  },
  "externalDatabases": {},
  "externalDatabaseTemplates": {
      "HIVE": {
          "name":               "hivetemplate",
          "databaseServerName": "{{ aws_properties.cluster_types[cluster_type].deployment.cloudera_database_server_name  }}",
          "databaseNamePrefix": "hive"
      },
      "HUE": {
          "name":               "huetemplate",
          "databaseServerName": "{{ aws_properties.cluster_types[cluster_type].deployment.cloudera_database_server_name  }}",
          "databaseNamePrefix": "hue"
      },
      "OOZIE": {
          "name":               "oozietemplate",
          "databaseServerName": "{{ aws_properties.cluster_types[cluster_type].deployment.cloudera_database_server_name  }}",
          "databaseNamePrefix": "oozie"
      }
  },
  "parcelRepositories": [
      "https://archive.cloudera.com/cdh6/6.2.0/parcels/",
      "https://archive.cloudera.com/kafka/parcels/latest/"
  ],
  "restartClusterOnUpdate":         false,
  "redeployClientConfigsOnUpdate":  false,
  "instancePostCreateScripts":      [
    """#!/bin/sh
    find_cdsw=$(grep -i /var/lib/cdsw /etc/fstab)

    if [ "$?" == "0" ]
    then
      umount /dev/xvdf
      umount /dev/xvdg

      sed -i '/.*\/data0\s.*/d' /etc/fstab
      sed -i '/.*\/data1\s.*/d' /etc/fstab

      touch /tmp/done_ebs
    fi
    exit 0
    """
  ],
  "postCreateScripts":              [],
  "preTerminateScripts":            [],
  "migrations":                     [],
  "administrationSettings": {
    "autoRepairEnabled":                  false,
    "autoRepairCooldownPeriodInSeconds":  1800
  }
}
