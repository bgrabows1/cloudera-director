---
- name: Set Terraform variables
  set_fact:
    director_public_dns:                      "{{ jsonVar | json_query('modules[0].outputs.director_public_dns.value')}}"
    director_private_dns:                     "{{ jsonVar | json_query('modules[0].outputs.director_private_dns.value')}}"
    cloudera_director_sg_id:                  "{{ jsonVar | json_query('modules[0].outputs.director_sg_id.value')}}"
    cloudera_director_subnet_id:              "{{ jsonVar | json_query('modules[0].outputs.director_subnet_id.value')}}"
    cloudera_director_db_subnet_group_name:   "{{ jsonVar | json_query('modules[0].outputs.director_db_subnet_group_name.value')}}"
    cloudera_director_ami:                    "{{ jsonVar | json_query('modules[0].outputs.director_ami.value')}}"
    director_public_ip:                       "{{ jsonVar | json_query('modules[0].outputs.director_public_ip.value')}}"
  vars:
    jsonVar: "{{ lookup('file', '{{ terraform_tf_state_path }}') | from_json }}"

- name: Download JDK package
  get_url:
    url:      "{{ oracle_java_jdk_url }}"
    dest:     /tmp/{{ oracle_java_jdk_url | basename }}
    mode:     0644
    headers:
      Cookie: oraclelicense=accept-securebackup-cookie

- name: Download PyOpenSSL package
  get_url:
    url:  "{{ pyopenssl_url }}"
    dest: /tmp/{{ pyopenssl_url | basename}}
    mode: 0644

- name: Install PyOpenSSL package
  yum:
    name:   /tmp/{{ pyopenssl_url | basename}}
    state:  present

- name: Install JDK package
  yum:
    name:   /tmp/{{ oracle_java_jdk_url | basename }}
    state:  present

- name: Import Cloudera RPM repository GPG key
  rpm_key:
    key:    https://archive.cloudera.com/director/redhat/7/x86_64/director/RPM-GPG-KEY-cloudera
    state:  present
    
- name: Import Cloudera RPM repository
  yum_repository:
    name:         cloudera-director
    description:  Cloudera Director YUM repo
    baseurl:      http://archive.cloudera.com/director/redhat/7/x86_64/director/2/

- name: Install Cloudera Director
  yum:
    name:         
      - cloudera-director-server
      - openssl
    state:        present
    update_cache: yes

- name: Create Cloudera Director configuration
  template:
    src:  application.properties.j2
    dest: /etc/cloudera-director-server/application.properties

- name: Create directory for SSL certificates
  file:
    path:   "{{ keystore_path }}/{{ director_public_dns }}"
    state:  directory
    mode:   755

- name: Generate an OpenSSL private key.
  openssl_privatekey:
    path: "{{ keystore_path }}/{{ director_public_dns }}/{{ director_public_dns }}.key"

- name: Generate an OpenSSL CSR.
  openssl_csr:
    path:             "{{ keystore_path }}/{{ director_public_dns }}/{{ director_public_dns }}.csr"
    privatekey_path:  "{{ keystore_path }}/{{ director_public_dns }}/{{ director_public_dns }}.key"
    common_name:      "{{ director_public_dns }}"

- name: Generate a Self Signed OpenSSL certificate.
  openssl_certificate:
    path:             "{{ keystore_path }}/{{ director_public_dns }}/{{ director_public_dns }}.crt"
    privatekey_path:  "{{ keystore_path }}/{{ director_public_dns }}/{{ director_public_dns }}.key"
    csr_path:         "{{ keystore_path }}/{{ director_public_dns }}/{{ director_public_dns }}.csr"
    provider:         selfsigned

- name: Convert PEM to PKCS12
  command: >
    openssl pkcs12 -export 
    -out {{ keystore_path }}/{{ director_public_dns }}/{{ director_public_dns }}.p12 
    -in {{ keystore_path }}/{{ director_public_dns }}/{{ director_public_dns }}.crt 
    -inkey {{ keystore_path }}/{{ director_public_dns }}/{{ director_public_dns }}.key
    -passout pass:{{ keystore_pass }}
    -name "{{ director_public_dns }}"
  args:
    creates: "{{ keystore_path }}{{ director_public_dns }}/{{ director_public_dns }}.p12"

- name: Import SSL certificate to a given cacerts keystore
  java_cert:
    keystore_path:    "{{ keystore_path }}/{{ director_public_dns }}/{{ director_public_dns }}.jks"
    keystore_pass:    "{{ keystore_pass }}"
    keystore_create:  yes
    pkcs12_path:      "{{ keystore_path }}/{{ director_public_dns }}/{{ director_public_dns }}.p12"
    pkcs12_password:  "{{ keystore_pass }}"
    pkcs12_alias:     "{{ director_public_dns }}"
    state:            present

- name: Import SSL certificate to a given cacerts keystore
  java_cert:
    keystore_path:    "{{ keystore_path }}/{{ director_public_dns }}/{{ director_public_dns }}.jks"
    keystore_pass:    "{{ keystore_pass }}"
    keystore_create:  yes
    cert_path:        "{{ keystore_path }}/{{ director_public_dns }}/{{ director_public_dns }}.crt"
    cert_alias:       "{{ director_public_dns }}"
    state:            present 

- name: Start Cloudera Director service.
  systemd:
    name:     cloudera-director-server
    state:    started
    enabled:  yes